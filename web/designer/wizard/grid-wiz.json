{
  json : {
    title:"New Grid",
    size : {width:480,height:440},
    alignTo : [document,'c-c'],
	"scope.!callback" : Ext.emptyFn,
	"scope.!designer" : null,
	listeners : {
		afterjsonload :  function(){
			var its = [];
		 	var stos = scope.designer.getStore().items;
		 	for(var i=0;i<stos.length;i++){
				var sto=stos[i];
				var stocls=sto.classname;
				var stoid=sto[scope.designer.jsonId];
				its.push({xtype:'radio',boxLabel:stocls,name: 'chksto',inputValue:stoid});
			}
			var fits={xtype: 'fieldset',title: 'Store',defaultType: 'radio',layout:"table",layoutConfig:{columns:3},collapsible: true,items:its};
			scope.items.first().add(fits);
			scope.items.first().doLayout();
		 }
   }
  },
	xtype:"form",
	frame:true,
	labelWidth:120,
	buttons:[{
	 text:'Ok',
	 scope:this,
	 handler:function() {
       	var _form=scope.items.first().form;
       	if(!_form.isValid()) return;
		var config="{xtype:'grid',frame:true,viewConfig:{forceFit:true},columnLines:true,autoHeight:false,height:320";
		var values = _form.getValues();
		var gridtl=values.gridtl,chksto=values.chksto;
		if(!chksto || ""==chksto){
			Ext.Msg.alert("Error", "必须选择Store");
			return;
		}
		var csm,gsm,selmodel=values.selmodel;
		if('num'==selmodel){
			csm="new JrafRowNumberer()";
		}
		else if('chk'==selmodel){
			csm="new Ext.grid.CheckboxSelectionModel()";
			gsm="new Ext.grid.CheckboxSelectionModel({listeners:{selectionchange:function(sm){"+
            	"var _grid=this.grid;if(sm.getCount()){"+
                "_grid.removeBtn.enable();}else{_grid.removeBtn.disable();}}}})";
		}
		var tbaradd=values.tbaradd;
		var tbardel=values.tbardel;
		var tbarsave=values.tbarsave;
		var tbarcancel=values.tbarcancel;
		
		var bbarpag=values.bbarpag;

		scope.close();
		var sto=scope.designer.getStore(chksto);
		config+=",title:'"+gridtl+"'";
		config+=",store:"+sto.classname;
		var tbar="[";
		if(tbaradd&&""!=tbaradd){
			tbar+="{text:'新增',iconCls:'add',ref: '../addBtn',handler:function(){var _grid=this.ownerCt.ownerCt;"+
		        "var recordType=_grid.getStore().recordType;var nr=new recordType();"+
	            "_grid.getStore().add(nr);_grid.getSelectionModel().selectLastRow();"+
	            "var rec=_grid.getSelectionModel().getSelected();}}";
		}
		if(tbardel&&""!=tbardel){
			if(tbar.length>1) tbar+=",\r\n{xtype: 'tbseparator'},\r\n";
			tbar+="{text:'删除',iconCls:'delete',ref: '../removeBtn',disabled: true,handler:function(){"+
				"var _grid=this.ownerCt.ownerCt;"+
		        "var ckrs=_grid.getSelectionModel().getSelections();"+
				"for(var i=0;i<ckrs.length;i++){_grid.getStore().remove(ckrs[i]);}"+
				"}}"
		}		
		if(tbarsave&&""!=tbarsave){
			if(tbar.length>1) tbar+=",\r\n{xtype: 'tbseparator'},\r\n";
			tbar+="{text:'保存',iconCls:'disk',ref: '../saveBtn',handler:function(){"+
		        "var _grid=this.ownerCt.ownerCt;Ext.Msg.confirm('保存数据','确认保存已修改数据?',function(btn){"+
				"if(btn == 'yes'){_grid.getStore().save();}});}}"
		}
		if(tbarcancel&&""!=tbarcancel){
			if(tbar.length>1) tbar+=",\r\n{xtype: 'tbseparator'},\r\n";
			tbar+="{text:'取消',iconCls:'cancel',ref: '../cancelBtn',handler:function(){"+
				"var _grid=this.ownerCt.ownerCt;"+
				"_grid.getStore().rejectChanges();}}"
		}
		tbar+="]";
		config+=",tbar:"+tbar;
		if(bbarpag&&""!=bbarpag){
			config+=",bbar:new Ext.PagingToolbar({pageSize: JrafSession.get('PageSize'),store:"+sto.classname+",displayInfo: true})";
		}
		var storec=sto["__JSON__recordType"]||sto.recordType;
		if(typeof(storec)=='object')storec=storec.value;
		var recType=scope.designer.getRecord(null,storec);
		var selFlds=recType.items;
		var gridcm="[";
		if(csm) gridcm+=csm;
		for(var i=0;i<selFlds.length;i++){
			var fld=selFlds[i];
			if(gridcm.length>1) gridcm+=",\n";
			var rrer=(fld['type']=='date'||fld['type']=='time')?",renderer:Ext.util.Format.dateRenderer('Y-m-d H:i:s')":"";
			gridcm+="{width:40,sortable:true,header:'"+fld['fieldLabel']+"',dataIndex:'"+fld['name']+"'"+rrer+"}";
		}
		gridcm+="]";
		config+=",colModel:new Ext.grid.ColumnModel("+gridcm+")";
		if(gsm) config+=",sm:"+gsm;
		config+="}";
		var cfgobj=scope.designer.decode(config);
		scope.callback(cfgobj);
    }
	 },{
	  text:'Cancel',
	  handler:function() {scope.close();}
  }],
	items:[{
	  xtype:"textfield",
	  fieldLabel:"grid title",
	  name:"gridtl",
	  allowBlank : true
	},{
        xtype: 'fieldset',
        title: 'SelectionModel',
        defaultType: 'radio',
        layout:"table",
		layoutConfig:{
		    columns:3
		},
		collapsible: true,
        items: [{
	        checked: true,
	        boxLabel: 'Null',
	        name: 'selmodel',
	        inputValue: ''
	    }, {
	        boxLabel: 'RowNumber',
	        name: 'selmodel',
	        inputValue: 'num'
	    }, {
	        boxLabel: 'Checkbox',
	        name: 'selmodel',
	        inputValue: 'chk'
    	}]
    },{
        xtype: 'fieldset',
        title: 'tbar',
        defaultType: 'checkbox',
        layout:"table",
		layoutConfig:{
		    columns:4
		},
		collapsible: true,
        items: [{
	        boxLabel: 'add',
	        name: 'tbaradd',
	        inputValue: 'add'
	    }, {
	        boxLabel: 'delete',
	        name: 'tbardel',
	        inputValue: 'del'
	    },{
	        boxLabel: 'save',
	        name: 'tbarsave',
	        inputValue: 'save'
	    }, {
	        boxLabel: 'cancel',
	        name: 'tbarcancel',
	        inputValue: 'cancel'
	    }]
    },{
        xtype: 'fieldset',
        title: 'bbar',
        defaultType: 'checkbox',
        layout:"table",
		layoutConfig:{
		    columns:2
		},
		collapsible: true,
        items: [{
	        boxLabel: 'PagingToolbar',
	        name: 'bbarpag',
	        inputValue: 'page'
	    }]
    }]
}